var SearchComponent = (function($){

    var defaultConfig = {
        url: '',
        placeholder: 'search',
        default: '',
        autocompleteUrl: '',
        history: {
            enable: true
        },
        hotUrl: '',
        i18n: {

        }
    };


    var $that;
    var $config;
    var $node;
    var $searchDiv;
    var $bodyEle;
    var $searchClose;
    var $searchBtn;
    var $searchInput;
    var $searchRes;
    var $historyE;
    var $historyList;
    var $clearHistoryE;
    var $searchHot;
    var $form;
    var $cache;
    var $searchHotDiv;
    var $historyEDiv;

    var SearchComponentFun = function(node, config){
        $that = this;
        $node = node.jquery ? node : $(node);
        $node.on("click", $.proxy(this, "onTextClick"));
        if ($('#ypSearch-box').length > 0) {
            return false;
        }
        $config = $.extend(defaultConfig, config);
        $bodyEle = $('body');
        $searchDiv = $(
            '<div id="ypSearch-box" class="search-div hide">' +
            '<div class="yp-header-home-wrapper">' +
            '<div class="yp-search-container on-focus" id="index_search_head">' +
            '<div class="yp-search-box-cover" style="opacity: 0;"></div>' +
            '<div class="yp-search-box">' +
            '<div class="yp-search-tb">' +
            '<div class="yp-search-icon">' +
            '<span class="yp-search-icon-logo"><i class="yp-sprite-icon"></i></span>' +
            '<span id="index_search_bar_cancel" class="yp-search-icon-cancel"><i class="yp-sprite-icon search-close"></i></span>' +
            '</div>' +
            '<form action="' + $config.url + '" id="index_searchForm" class="yp-search-form">' +
            '<div class="yp-search-form-box">' +
            '<span class="yp-search-form-icon yp-sprite-icon"></span>' +
            '<div class="yp-search-form-input">' +
            '<input type="text" maxlength="20" autocomplete="off" name="kw" value="" placeholder="' + $config.placeholder + '" id="searchkwId" class="hilight1 searchKw">' +
            '</div>' +
            '<a href="javascript:void(0);" class="yp-search-icon-close yp-sprite-icon" id="index_clear_keyword" style="display:none;"></a>' +
            '<a href="javascript:void(0)" id="index_search_submit" class="yp-search-form-action search_btn"><span class="yp-sprite-icon"></span></a>' +
            '</div>' +
            '</form>' +
            '</div>' +
            '</div>' +
            '</div>' +
            '</div>' +
            '<div id="search_land_searchland" class="search-land">' +
            '<div id="searchland2" class="hot-search">' +
            '<div class="hot-search-head cf"><p>热门搜索</p></div>' +
            '<div class="hot-search-tags search-hot"></div>' +
            '</div>' +
            '</div>' +
            '<div id="search_land_searchland1" class="search-land" style="margin-top:10px">' +
            '<div class="recent-search-head cf " style="border-bottom: 1px solid #eee;"><p>历史搜索</p><i id="searchland5" class="garbage-pic clear-searchhis"></i></div>' +
            '<ul class="association-normal search-his"></ul>' +
            '</div>'+
            '<div class="search-land">' +
            '<ul class="association-normal search-res"></ul>' +
            '</div>'+
            '</div>'
        ).appendTo($bodyEle);
        $form = $('.search-div .yp-search-form');
        $searchClose = $('.search-close');
        $searchBtn = $('.search_btn');
        $searchRes = $( '.search-res');
        $searchInput = $('.searchKw');
        $searchHot = $('.search-hot');
        $searchHotDiv = $('#search_land_searchland');
        $historyEDiv = $('#search_land_searchland1');
        $historyE = $('.search-his');
        $clearHistoryE = $('.clear-searchhis');
        $historyList = $('.history');
        $cache = {};

        if ($config.hotUrl) {
            $that.getHotList(10);
        }

        if($config.history.enable){
            $that.getHistoryList();
        }
        $that.bind();
    }

    SearchComponentFun.prototype.bind = function() {
        $form.on('submit', $.proxy(this, "onFormSubmit"));
        $searchInput
            .on('blur', $.proxy(this, "onTextBlur"))
            .on('focus', $.proxy(this, "onTextFocus"))
            .on('input', $.proxy(this, "onTextInput"));
        $searchClose
            .on('click', $.proxy(this, "onCloseClick"));
        $searchBtn
            .on('click', $.proxy(this, "onSearchClick"));
        if ($config.autocompleteUrl) {
            $searchInput
                .on('input', $.proxy(this, "onTextInput"));
        }
    };

    SearchComponentFun.prototype.getHistoryList = function() {
        if (!$that.isLocalStorageNameSupported()) {
            $historyList.hide();
            return false;
        }
        var storage = window.localStorage;
        var key = 'searchHis'
        //var searchHis = storage.getItem(key);
        var searchHis = storage[key];
        if(searchHis){
            var hisItems=searchHis.split(":");
            if  (hisItems && hisItems.length > 0) {
                $clearHistoryE.on('click', $.proxy(this, "onClearClick"))
                var result = '';
                var i = hisItems.length - 1;
                var len = 0;
                for (; i >= 0; i--) {
                    if (hisItems[i] &&　hisItems[i].trim()) {
                        result += '<li><a href="javascript:void(0);" class="history_li"><span>'+ hisItems[i] +'</span></a></li>';
                        len++;
                    }
                    if (len >= 5) {
                        break;
                    }
                }
                $historyE.append(result);
                $('.history_li').on('click', function(){
                    var historyKey = $(this).text();
                    window.location = $config.url+"?kw="+encodeURIComponent(historyKey)+"";
                });
            }
        }
    }

    SearchComponentFun.prototype.getHotList = function(size) {
        $.get($config.hotUrl + "&m="+new Date().getTime(),  function(resutlt) {
                if(resutlt.list){
                    var KeyWordsData = "";
                    var data = resutlt.list;
                    $.each(data, function(i, v){
                        if (v.name) {
                            KeyWordsData += '<span><a href="' + $config.url+"?kw="+encodeURIComponent(v.name) + '"><i>'+ v.name + '</i></a></span>';
                        }
                    });

                    $searchHot.empty().append(KeyWordsData).show();
                    $('.hot-key').on('click', function(){
                        var hotKey = $(this).find('span').text();
                        $that.saveHistory(hotKey);
                        return true;
                    })
                } else {
                    $searchHot.hide().empty();
                }
            }
        );
    };

    SearchComponentFun.prototype.onCloseClick = function() {
        $('.mm-page>*:not(.search-div#ypSearch-box)').removeClass('hide')
        $searchDiv.addClass('hide');

        return false;
    };

    SearchComponentFun.prototype.onTextClick = function() {
        $('.mm-page>*:not(.search-div#ypSearch-box)').addClass('hide');
        $searchDiv.removeClass('hide');
        $searchInput.focus();
        $searchClose.show();
        return false;
    };

    SearchComponentFun.prototype.onFormSubmit = function() {
        $that.onSearchClick();
    };

    SearchComponentFun.prototype.onTextInput = function() {
        var key = $searchInput.val();
        if (key && this.lastKey != key) {
            this.lastKey = key;
            $.getJSON($config.autocompleteUrl + encodeURIComponent(key) + "", function (data, status, xhr) {
                //$.getJSON("http://www.ingping.com/search/solrCheck?format=json&callback=?&term=" + encodeURIComponent(key) + "", function (data, status, xhr) {
                if (!(toString.apply(data) === '[object Array]' && data.length == 0)) {
                    var result = '';
                    $.each(data, function(i, v){
                        result += '<li class="auto-li"><a href="javascript:void(0);"><span class="search-name">' + v + '</span></a></li>';
                    });
                    $searchRes.empty().append(result).show();
                    $searchHotDiv.hide();
                    $historyEDiv.hide();

                    $('.auto-li').on('click', function(){
                        var v = $(this).find('span').text();
                        $searchInput.val(v);
                        $that.saveHistory(v);
                        window.location = $config.url+"?kw="+encodeURIComponent(v)+"";
                        return true;
                    });
                }
            });
        } else if (!key) {
            $searchRes.empty().hide();
            $searchHotDiv.show();
            $historyEDiv.show();
        }
        return false;
    };

    SearchComponentFun.prototype.onSearchClick = function() {
        var key = $searchInput.val() || $config.default;
        this.saveHistory(key);
        window.location = $config.url+"?kw="+encodeURIComponent(key)+"";
        return false;
    };

    SearchComponentFun.prototype.saveHistory = function(value) {
        if(value &&　$that.isLocalStorageNameSupported()){
            var key = 'searchHis';
            var storage = window.localStorage;
            //var searchHis = storage.getItem(key)
            var searchHis = storage[key];
            if(searchHis){
                var hisItems = searchHis.split(":");
                var isExist = false;
                if  (hisItems && hisItems.length > 0) {
                    $.each(hisItems, function (i, v) {
                        if (value === v) {
                            isExist = true;
                        }
                    })
                }
                if (!isExist) {
                    //storage.setItem=(key, searchHis + ":" + value + ":");
                    storage[key] = searchHis + ":" + value + ":";
                }
            } else{
                //storage.setItem=(key, value);
                storage[key] = value;
            }
        }
    };

    SearchComponentFun.prototype.onClearClick = function() {
        if (confirm('确定清除历史记录'))
        {
            if(window.localStorage){
                window.localStorage.searchHis = '';
            }
            $historyE.empty();
        }
    };

    SearchComponentFun.prototype.onTextBlur = function() {
        if (!$searchInput.val()) {
            $searchInput.val('').attr('placeholder', $config.placeholder);
        }
    };

    var $enableStorage = undefined;
    SearchComponentFun.prototype.isLocalStorageNameSupported = function() {
        if ($enableStorage === undefined) {
            var testKey = 'test', storage = window.localStorage;
            try {
                //storage.setItem(testKey, '1');
                //storage.removeItem(testKey);
                storage[testKey] = "1"
                $enableStorage = true;

            } catch (error) {
                //alert('Your web browser does not support storing settings locally.');
                $enableStorage = false;
            }
        }
        return $enableStorage;
    };
    return SearchComponentFun;

})(jQuery);

jQuery.fn.ypSearch = function(config) {
    //this.each(function(i, node) {
    //    new SearchComponent(node, config);
    //});
    new SearchComponent(this, config);
    return this;
};